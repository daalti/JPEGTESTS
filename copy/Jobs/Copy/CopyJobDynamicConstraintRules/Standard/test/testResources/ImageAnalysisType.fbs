namespace dune.imaging.types;

enum BlankPageDetectionResult:byte
{
    ///< Indicates that the type has not been set or is unknown.
    UNKNOWN,                 
    ///< Indicates image was not a blank page.
    NOTBLANK,
    ///< Indicates image was blank page.
    BLANK
}

enum BlankPageColorMatchResult:byte
{
    ///< Indicates that the type has not been set or is unknown.
    UNKNOWN,
    ///< Indicates image was blank page and color matched.
    MATCHED,
    ///< Indicates image was not a colored blank page
    NOTMATCHED
}

enum BarCodeDetectionResult:byte
{
    ///< Indicates that the type has not been set or is unknown.
    UNKNOWN,                 
    ///< Indicates imaage has barcode.
    BARCODEEXIST,
    ///< Indicates image doesn't have bacode.
    NOBARCODE
}

table ImageAnalysisTypeFb {
    blankPageDetectionResult_:dune.imaging.types.BlankPageDetectionResult;
    blankPageColorMatchResult_:dune.imaging.types.BlankPageColorMatchResult;
    barCodeDetectionResult_:dune.imaging.types.BarCodeDetectionResult;
    counterfeitDetectionResult_:bool;
    paperArea_:dune.imaging.types.SimpleMargins;
    imageArea_:dune.imaging.types.SimpleMargins;
}

struct SimpleMargins {
    left: int32;
    top: int32;
    right: int32;
    bottom: int32;
}

enum AutoCropMode:byte
{
    Off = 0,
    PageCrop,
    ContentCrop
}
root_type ImageAnalysisTypeFb;